/*********************************************************************************************
@Created By :       Prakhar Gupta
@Created Date:      26 Nov 2014
@Description:       Controller for EmailCase page, to submit the case without login/Sign up in NXP Community                    
********************************************************************************************/

/*********************************************************************************************
@Modified By :      Amrutha R
@Modified Date :    15 Jan 2015
Description :       Code cleaned up/ modified as per best practices
********************************************************************************************/

public class SubmitCaseController 
{
    private static final String CASE_TSCOMMUNITY = 'TS_Community';
    // The API endpoint for the reCAPTCHA service
    private static final String BASE_URL = 'https://www.google.com/recaptcha/api/verify';
    // The keys we get by signing up for reCAPTCHA for our domain
    private static final String PRIVATE_KEY = '6LfGGgATAAAAADJaNz3XRVqx8JYHO_cDoSF7ivOO';
    private static final String PUBLIC_KEY = '6LfGGgATAAAAALX4go73llNVYsFd9GlHDQDtASfo';    
    private static final String EMAIL_REGEX = '^[a-zA-Z0-9._|\\\\%#~`=?&/$^*!}{+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$';
    private static final String NXP_COMMUNITY_ACCOUNT= 'NXP Community';
    private static final String TS_COMMUNITY_ACCOUNT= 'Technical Services';
    
    // Whether the submission has passed reCAPTCHA validation or not
    public Boolean isVerified { get; private set; }
    
    public String strCaseNumber;
    public String strName {get; set;}
    public String strTitle {get; set;}
    public String strEmail {get; set;}    
    public String strAcctNum { get; set; }
    public String strCaseNumb{get; set;}
    public Case objCase {get; set;}
    public boolean isShowmsg{get;set;}
    public Id contactId;
    public Contact objContact;
    public List<Contact> lstContacts = new List<Contact>();    
    public String strFilebody { get; set; }
    public String strFilesize { get; set; }
    public String strWebRegion { get; set; }
    public String strProjectStage { get; set; }
    public String strExpectedAnnualUnitVolume { get; set; }
    public String strProductApplication { get; set; }
    public String strDescription { get; set; }
    public String strSubject { get; set; }
    public String strNatureOfQuestion { get; set; }
    public String strQuestion { get; set; }
    public String strProductTypeNumber { get; set; }
    public String strCountry { get; set; }
    public String strJobTitle { get; set; }
    public String strStateProvince { get; set; }
    public String strTwitter { get; set; }
    public String strLinkedin { get; set; }
    public String strCompany { get; set; }
    public String strFacebook { get; set; }
    public String strPhoneNumber { get; set; }
    public String strLastName { get; set; }
    public String strFirstName { get; set; }
    public String strPriority { get; set; }
    public String strState {get;set;}
    public String strCity {get;set;}
    public String strStatus{get;set;} 
    public String strProduct {get;set;}
    public String strCategory {get;set;}
    public String strSubCategory {get;set;}
    public String strTopics {get;set;}
    public String strSubTopic{get;set;}
    
    public Account objAccount = [Select Id From Account Where Name = :TS_COMMUNITY_ACCOUNT LIMIT 1]; 
    public List<SelectOption> lstOptions;
    private List<RecordType> lstRecordTypes = [Select Id, DeveloperName From RecordType
                                                Where SobjectType = 'Case' AND  
                                                DeveloperName =: CASE_TSCOMMUNITY AND IsActive=True LIMIT 1];
    
    public SubmitCaseController() 
    {
        this.isVerified = false;                
    }
    
    public String publicKey 
    {
        get 
        { 
            return PUBLIC_KEY; 
        }
        
    } 
    
    // Create properties for the non-VF component input fields generated by the reCAPTCHA JavaScript.
    public String recaptchaChallenge 
    {
        get 
        {
            return ApexPages.currentPage().getParameters().get('recaptcha_challenge_field');
        }
      
    }
    
    public String recaptchaResponse  
    {
        get 
        {
            return ApexPages.currentPage().getParameters().get('recaptcha_response_field');
        }
        
    }
    
    public String remoteHost 
    {
        get
        {
            String strIPAddress = '127.0.0.1';
            // also could use x-original-remote-host
            Map<String, String> mapHeader = ApexPages.currentPage().getHeaders();
            if (mapHeader.get('x-original-remote-addr')!= null)
                strIPAddress =  mapHeader.get('x-original-remote-addr');
            else if (mapHeader.get('X-Salesforce-SIP')!= null)
                strIPAddress =  mapHeader.get('X-Salesforce-SIP');
            return strIPAddress;
        }
        
    }
    
    public Attachment attachment 
    {
        get 
        {
            if (attachment == null)
            attachment = new Attachment();
            return attachment;
        }
        set;
    } 
    
    public List<SelectOption> getproducts()
    {        
        lstOptions = new List<SelectOption>();
        lstOptions.add(new SelectOption('--None--','--None--'));       
        //lstOptions.add(new SelectOption('Automotive Products','Automotive Products'));
        lstOptions.add(new SelectOption('Audio and Media Processing','Audio and Media Processing'));
        lstOptions.add(new SelectOption('Discretes and Logic','Discretes and Logic'));
        lstOptions.add(new SelectOption('Identification and Security','Identification and Security'));
        lstOptions.add(new SelectOption('Interface and Connectivity','Interface and Connectivity'));
        lstOptions.add(new SelectOption('Microcontrollers and Processors','Microcontrollers and Processors'));
        lstOptions.add(new SelectOption('Power Management','Power Management'));
        lstOptions.add(new SelectOption('RF','RF'));        
        lstOptions.add(new SelectOption('Sensors','Sensors'));
        lstOptions.add(new SelectOption('Other','Other'));
        
        return lstOptions;
    }   
    
   /* public List<SelectOption> getCategories()
    {        
        lstOptions = new List<SelectOption>();
        lstOptions.add(new SelectOption('--None--','--None--'));       
        lstOptions.add(new SelectOption('Amplifiers','Amplifiers'));
        lstOptions.add(new SelectOption('Audio/radio','Audio/radio'));
        lstOptions.add(new SelectOption('Audio / video','Audio / video'));
        lstOptions.add(new SelectOption('Automotive','Automotive'));
        lstOptions.add(new SelectOption('Bipolar transistors','Bipolar transistors'));
        lstOptions.add(new SelectOption('Data converters','Data converters'));
        lstOptions.add(new SelectOption('Diodes','Diodes'));
        lstOptions.add(new SelectOption('Display drivers','Display drivers'));        
        lstOptions.add(new SelectOption('ESD, EMI and signal conditioning','ESD, EMI and signal conditioning'));
        lstOptions.add(new SelectOption('Identification and security','Identification and security'));
        lstOptions.add(new SelectOption('Interface and connectivity','Interface and connectivity'));
        lstOptions.add(new SelectOption('Lighting driver and controller ICs','Lighting driver and controller ICs'));
        lstOptions.add(new SelectOption('Logic','Logic'));
        lstOptions.add(new SelectOption('Media processors','Media processors'));
        lstOptions.add(new SelectOption('Microcontrollers','Microcontrollers'));
        lstOptions.add(new SelectOption('MOSFETs','MOSFETs'));
        lstOptions.add(new SelectOption('Other','Other'));
        lstOptions.add(new SelectOption('Power management ICs','Power management ICs')); 
        lstOptions.add(new SelectOption('RF','RF'));  
        lstOptions.add(new SelectOption('Sensors','Sensors'));
        lstOptions.add(new SelectOption('Thyristors','Thyristors'));
        lstOptions.add(new SelectOption('TV and STB front ends','TV and STB front ends'));
        lstOptions.add(new SelectOption('General Products','General Products'));
        lstOptions.add(new SelectOption('Human Resources','Human Resources'));
        lstOptions.add(new SelectOption('Logistics','Logistics'));        
        lstOptions.add(new SelectOption('No Specific Category','No Specific Category'));
        
        return lstOptions;
    }  */
    
   
   /* public List<SelectOption> getsubCategories ()
    {
        lstOptions = new List<SelectOption>();
        if(strCategory == 'Amplifiers')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Audio amplifiers','Audio amplifiers'));
            lstOptions.add(new SelectOption('CATV hybrids','CATV hybrids'));            
            lstOptions.add(new SelectOption('Optional amplifiers','Optional amplifiers'));
        }
        else if(strCategory == 'Audio/radio')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('AM/FM radio & audio','AM/FM radio & audio'));
            lstOptions.add(new SelectOption('Car radio on-off logic','Car radio on-off logic'));
            lstOptions.add(new SelectOption('Car radio sound control','Car radio sound control'));
            lstOptions.add(new SelectOption('Digital radio processors','Digital radio processors'));
            lstOptions.add(new SelectOption('Single chip tuner/ASP (car radio)','Single chip tuner/ASP (car radio)'));
            lstOptions.add(new SelectOption('Tuners.','Tuners.'));
        }
        else if(strCategory == 'Audio / video')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Audio amplifiers.','Audio amplifiers.'));
            lstOptions.add(new SelectOption('Audio signal processors','Audio signal processors'));
            lstOptions.add(new SelectOption('Audio signal processors (car radio)','Audio signal processors (car radio)'));
            lstOptions.add(new SelectOption('Converters','Converters'));
            lstOptions.add(new SelectOption('Demodulators / channel decoders','Demodulators / channel decoders'));
            lstOptions.add(new SelectOption('Digital PC-camera signal processor','Digital PC-camera signal processor'));
            lstOptions.add(new SelectOption('HDMI','HDMI'));
            lstOptions.add(new SelectOption('Interface/transmission','Interface/transmission'));
            lstOptions.add(new SelectOption('Media processors','Media processors'));
            lstOptions.add(new SelectOption('Mixer/oscillators for TV','Mixer/oscillators for TV'));
            lstOptions.add(new SelectOption('Nexperia','Nexperia'));
            lstOptions.add(new SelectOption('Noise reduction','Noise reduction'));
            lstOptions.add(new SelectOption('NTSC/PAL A/V decoders/encoders/codecs','NTSC/PAL A/V decoders/encoders/codecs'));
            lstOptions.add(new SelectOption('PCI/PCIe multimedia interfaces','PCI/PCIe multimedia interfaces'));
            lstOptions.add(new SelectOption('Set-top box ICs','Set-top box ICs'));
            lstOptions.add(new SelectOption('Single chip tuner/ASP (car radio)','Single chip tuner/ASP (car radio)'));
            lstOptions.add(new SelectOption('Storage/DVD','Storage/DVD'));
            lstOptions.add(new SelectOption('Tuners..','Tuners..'));
        }
        else if(strCategory == 'Automotive')
        { 
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('AM/FM radio & audio.','AM/FM radio & audio.'));
            lstOptions.add(new SelectOption('Audio amplifiers .','Audio amplifiers .'));
            lstOptions.add(new SelectOption('Automotive lighting','Automotive lighting'));
            lstOptions.add(new SelectOption('Automotive MOSFETs','Automotive MOSFETs'));
            lstOptions.add(new SelectOption('Car access & immobilizers','Car access & immobilizers'));
            lstOptions.add(new SelectOption('Discretes','Discretes'));
            lstOptions.add(new SelectOption('Display & instrumentation','Display & instrumentation'));
            lstOptions.add(new SelectOption('Logic','Logic'));
            lstOptions.add(new SelectOption('Multi standard digital radio','Multi standard digital radio'));
            lstOptions.add(new SelectOption('Multimedia','Multimedia'));
            lstOptions.add(new SelectOption('RF','RF'));
            lstOptions.add(new SelectOption('RFID traceability','RFID traceability'));
            lstOptions.add(new SelectOption('Sensors','Sensors'));
            lstOptions.add(new SelectOption('Telematics on-board unit','Telematics on-board unit'));
            lstOptions.add(new SelectOption('Timing devices','Timing devices'));
            lstOptions.add(new SelectOption('Transceivers','Transceivers'));
            lstOptions.add(new SelectOption('Tuners .','Tuners .'));
        }
        else if(strCategory == 'Bipolar transistors')
        {  
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Avionics bipolar transistors','Avionics bipolar transistors'));
            lstOptions.add(new SelectOption('Audio amplifiers .','Audio amplifiers .'));
            lstOptions.add(new SelectOption('Darlington transistors','Darlington transistors'));
            lstOptions.add(new SelectOption('General purpose bipolar transistors','General purpose bipolar transistors'));
            lstOptions.add(new SelectOption('High voltage transistors','High voltage transistors'));
            lstOptions.add(new SelectOption('Low noise transistors','Low noise transistors'));
            lstOptions.add(new SelectOption('Matched pair transistors','Matched pair transistors'));
            lstOptions.add(new SelectOption('Medium frequency transistors','Medium frequency transistors'));
            lstOptions.add(new SelectOption('Medium power transistors','   Medium power transistors'));
            lstOptions.add(new SelectOption('MOSFET driver transistors','MOSFET driver transistors'));
            lstOptions.add(new SelectOption('Schmitt triggers','Schmitt triggers'));
            lstOptions.add(new SelectOption('Small building blocks','Small building blocks'));
            lstOptions.add(new SelectOption('Switching transistors','Switching transistors'));            
            lstOptions.add(new SelectOption('High Linearity Amplifiers, High Output Amplifiers, Drivers','High Linearity Amplifiers, High Output Amplifiers, Drivers'));
            lstOptions.add(new SelectOption('LNAs, Mixers, Frequency Multipliers, Buffers','LNAs, Mixers, Frequency Multipliers, Buffers'));
            lstOptions.add(new SelectOption('Low VCEsat (BISS) transistors','Low VCEsat (BISS) transistors'));
            lstOptions.add(new SelectOption('Oscillators','Oscillators'));
            lstOptions.add(new SelectOption('Resistor-equipped transistors (RETs)','Resistor-equipped transistors (RETs)'));
            lstOptions.add(new SelectOption('RF power transistors for portable equipment (UHF)','RF power transistors for portable equipment (UHF)'));
        }
        else if(strCategory == 'Data converters')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Audio converters','Audio converters'));
            lstOptions.add(new SelectOption('High speed ADC','High speed ADC'));
            lstOptions.add(new SelectOption('High speed DAC','High speed DAC'));
            lstOptions.add(new SelectOption('Automotive MOSFETs','Automotive MOSFETs'));
            lstOptions.add(new SelectOption('Imaging Front-End','Imaging Front-End'));
            lstOptions.add(new SelectOption('Video converters','Video converters'));
        }
        else if(strCategory == 'Diodes')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Bandswitching diodes','Bandswitching diodes'));
            lstOptions.add(new SelectOption('General purpose Schottky diodes = 250 mA','General purpose Schottky diodes = 250 mA'));
            lstOptions.add(new SelectOption('Medium power Schottky diodes = 200 mA','Medium power Schottky diodes = 200 mA'));
            lstOptions.add(new SelectOption('PIN diodes','PIN diodes'));
            lstOptions.add(new SelectOption('Power diodes (hyperfast recovery)','Power diodes (hyperfast recovery)'));
            lstOptions.add(new SelectOption('Power diodes (ultrafast recovery)','Power diodes (ultrafast recovery)'));
            lstOptions.add(new SelectOption('Power Schottky diode','Power Schottky diode'));
            lstOptions.add(new SelectOption('Schottky diodes (low capacitance RF)','Schottky diodes (low capacitance RF)'));
            lstOptions.add(new SelectOption('Switching diodes','Switching diodes'));
            lstOptions.add(new SelectOption('TV/VCR/DVD/HDD varicap diodes - UHF tuning','TV/VCR/DVD/HDD varicap diodes - UHF tuning'));
            lstOptions.add(new SelectOption('TV/VCR/DVD/HDD varicap diodes - VHF tuning','TV/VCR/DVD/HDD varicap diodes - VHF tuning'));
            lstOptions.add(new SelectOption('Varicap diodes','Varicap diodes'));
            lstOptions.add(new SelectOption('VCO and FM radio tuning varicap diodes','VCO and FM radio tuning varicap diodes'));
            lstOptions.add(new SelectOption('Zener diodes','Zener diodes'));
        }
        else if(strCategory == 'Display drivers')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('LCD character drivers','LCD character drivers'));
            lstOptions.add(new SelectOption('LCD graphic drivers','LCD graphic drivers'));
            lstOptions.add(new SelectOption('LCD segment drivers','LCD segment drivers'));
        }
        else if(strCategory == 'ESD, EMI and signal conditioning')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Application specific ESD and ESD/EMI solutions','Application specific ESD and ESD/EMI solutions'));
            lstOptions.add(new SelectOption('General ESD protection devices','General ESD protection devices'));
            lstOptions.add(new SelectOption('Transient voltage suppressor (TVS) diodes','Transient voltage suppressor (TVS) diodes'));
        }
         else if(strCategory == 'Identification and security')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Authentication','Authentication'));
            lstOptions.add(new SelectOption('Reader ICs','Reader ICs'));
            lstOptions.add(new SelectOption('Security and surveillance IP camera','Security and surveillance IP camera'));
            lstOptions.add(new SelectOption('Smart card ICs','Smart card ICs'));
            lstOptions.add(new SelectOption('Smart label and tag ICs','Smart label and tag ICs'));
        }
        else if(strCategory == 'Interface and connectivity')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Analog timers','Analog timers'));
            lstOptions.add(new SelectOption('Analog watch motor drivers','Analog watch motor drivers'));
            lstOptions.add(new SelectOption('Bridges','Bridges'));
            lstOptions.add(new SelectOption('Clocks with LCD drivers','Clocks with LCD drivers'));
            lstOptions.add(new SelectOption('DisplayPort','DisplayPort'));
            lstOptions.add(new SelectOption('DOCSIS','DOCSIS'));
            lstOptions.add(new SelectOption('Encoders','Encoders'));
            lstOptions.add(new SelectOption('GTL to TTL translators','GTL to TTL translators'));
            lstOptions.add(new SelectOption('HDMI.','HDMI.'));
            lstOptions.add(new SelectOption('I²C','I²C'));
            lstOptions.add(new SelectOption('Line drivers','Line drivers'));
            lstOptions.add(new SelectOption('Modem','Modem'));
            lstOptions.add(new SelectOption('NFC devices','NFC devices'));
            lstOptions.add(new SelectOption('PCI Express','PCI Express'));
            lstOptions.add(new SelectOption('PCI/PCIe multimedia interfaces.','PCI/PCIe multimedia interfaces.'));
            lstOptions.add(new SelectOption('Real-time clocks','Real-time clocks'));
            lstOptions.add(new SelectOption('SDIO Host controller','SDIO Host controller'));
            lstOptions.add(new SelectOption('Signal Conditioners - USB 3.0','Signal Conditioners - USB 3.0'));
            lstOptions.add(new SelectOption('System basis chips','System basis chips'));
            lstOptions.add(new SelectOption('Transceivers.','Transceivers.'));
            lstOptions.add(new SelectOption('UARTs','UARTs'));
            lstOptions.add(new SelectOption('USB host controllers','USB host controllers'));
            lstOptions.add(new SelectOption('Video SERDES','Video SERDES'));
            lstOptions.add(new SelectOption('Memory data switches','Memory data switches'));
        }
        else if(strCategory == 'Lighting driver and controller ICs')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('AC powered LED driver ICs','AC powered LED driver ICs'));
            lstOptions.add(new SelectOption('CCFL and EEFL drivers','CCFL and EEFL drivers'));
            lstOptions.add(new SelectOption('CFL and HFTL drivers - Dimmable','CFL and HFTL drivers - Dimmable'));
            lstOptions.add(new SelectOption('CFL and HFTL drivers - Fixed output','CFL and HFTL drivers - Fixed output'));
            lstOptions.add(new SelectOption('DC powered LED drivers','DC powered LED drivers'));
            lstOptions.add(new SelectOption('HID drivers','HID drivers'));
            lstOptions.add(new SelectOption('LED backlighting driver Ics','LED backlighting driver Ics'));
            lstOptions.add(new SelectOption('LED drivers for automotive','LED drivers for automotive'));
            lstOptions.add(new SelectOption('Light position controllers','Light position controllers'));
        }
        else if(strCategory == 'Logic')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Digital multiplexers','Digital multiplexers'));
            lstOptions.add(new SelectOption('Encoders .','Encoders .'));
            lstOptions.add(new SelectOption('FIFO registers','FIFO registers'));
            lstOptions.add(new SelectOption('Flip-flops','Flip-flops'));
            lstOptions.add(new SelectOption('Frequency dividers','Frequency dividers'));
            lstOptions.add(new SelectOption('Full adders','Full adders'));
            lstOptions.add(new SelectOption('Gates','Gates'));
            lstOptions.add(new SelectOption('Inverters','Inverters'));
            lstOptions.add(new SelectOption('Latches','Latches'));
            lstOptions.add(new SelectOption('Level shifters/translators','Level shifters/translators'));
            lstOptions.add(new SelectOption('Load switches','Load switches'));
            lstOptions.add(new SelectOption('Memory address latches','Memory address latches'));
            lstOptions.add(new SelectOption('Multivibrators','Multivibrators'));
            lstOptions.add(new SelectOption('Parity generators/checkers','Parity generators/checkers'));
            lstOptions.add(new SelectOption('Phase locked loops','Phase locked loops'));
            lstOptions.add(new SelectOption('Printer interfaces','Printer interfaces'));
            lstOptions.add(new SelectOption('RC timers','RC timers'));
            lstOptions.add(new SelectOption('Registered drivers','Registered drivers'));
            lstOptions.add(new SelectOption('Registered transceivers','Registered transceivers'));
            lstOptions.add(new SelectOption('Registers for memory modules','Registers for memory modules'));
            lstOptions.add(new SelectOption('Schmitt-triggers','Schmitt-triggers'));
            lstOptions.add(new SelectOption('Shift registers','Shift registers'));
            lstOptions.add(new SelectOption('Transceivers .','Transceivers .'));        
        
        }
        else if(strCategory == 'Media processors')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Car radio & audio DSP solutions','Car radio & audio DSP solutions'));
            lstOptions.add(new SelectOption('CD-DVD processors','CD-DVD processors'));
            lstOptions.add(new SelectOption('Digital radio processors.','Digital radio processors.'));
            lstOptions.add(new SelectOption('Multimedia processors.','Multimedia processors.'));
            lstOptions.add(new SelectOption('Optical storage','Optical storage'));
            lstOptions.add(new SelectOption('Zero IF downconverters','Zero IF downconverters'));
        }
        else if(strCategory == 'Microcontrollers')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Cortex-M0/M0+','Cortex-M0/M0+'));
            lstOptions.add(new SelectOption('Cortex-M4 (32-bit)','Cortex-M4 (32-bit)'));
            lstOptions.add(new SelectOption('ARM7 (32-bit)','ARM7 (32-bit)'));
            lstOptions.add(new SelectOption('ARM9 (32-bit)','ARM9 (32-bit)'));
            lstOptions.add(new SelectOption('80C51 (8-bit)','80C51 (8-bit)'));
            lstOptions.add(new SelectOption('XA (16-bit)','XA (16-bit)'));
            lstOptions.add(new SelectOption('Wireless microcontrollers','Wireless microcontrollers'));
            lstOptions.add(new SelectOption('LPCOpen','LPCOpen'));
            lstOptions.add(new SelectOption('Cortex-M3','Cortex-M3'));
        }
        else if(strCategory == 'MOSFETs')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Automotive MOSFETs','Automotive MOSFETs'));
            lstOptions.add(new SelectOption('RF power transistors (LDMOS)','RF power transistors (LDMOS)'));
            lstOptions.add(new SelectOption('RF small-signal MOSFETs','RF small-signal MOSFETs'));
            lstOptions.add(new SelectOption('Standard MOSFETs','Standard MOSFETs'));
        }
        else if(strCategory == 'Other')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Car access & immobilizers.','Car access & immobilizers.'));
            lstOptions.add(new SelectOption('Controllers','Controllers'));
            lstOptions.add(new SelectOption('Demodulators / channel decoders.','Demodulators / channel decoders.'));
            lstOptions.add(new SelectOption('Drivers','Drivers'));
            lstOptions.add(new SelectOption('Nexperia.','Nexperia.'));
            lstOptions.add(new SelectOption('NTSC/PAL A/V decoders/encoders/codecs.','NTSC/PAL A/V decoders/encoders/codecs.'));
            lstOptions.add(new SelectOption('Processors','Processors'));
            lstOptions.add(new SelectOption('Set-top box ICs.','Set-top box ICs.'));
            lstOptions.add(new SelectOption('Storage/DVD.','Storage/DVD.'));
            lstOptions.add(new SelectOption('TPMS chipset','TPMS chipset'));
            lstOptions.add(new SelectOption('Employment Verification','Employment Verification'));
            lstOptions.add(new SelectOption('Other','Other'));            
        }
        else if(strCategory == 'Power management ICs')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('AC-to-DC solutions','AC-to-DC solutions'));
            lstOptions.add(new SelectOption('Digital power control','Digital power control'));
            lstOptions.add(new SelectOption('Lighting driver and controller ICs','Lighting driver and controller ICs'));
            lstOptions.add(new SelectOption('Linear voltage regulators','Linear voltage regulators'));
            lstOptions.add(new SelectOption('Motor drive ICs','Motor drive ICs'));
            lstOptions.add(new SelectOption('OR-ing intelligent switches','OR-ing intelligent switches'));
            lstOptions.add(new SelectOption('VRM integrated powertrain modules','VRM integrated powertrain modules'));
            lstOptions.add(new SelectOption('Wireless charging solutions','Wireless charging solutions'));
        }
        else if(strCategory == 'RF')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Amplifiers','Amplifiers'));
            lstOptions.add(new SelectOption('CATV hybrids','CATV hybrids'));
            lstOptions.add(new SelectOption('Diodes','Diodes'));
            lstOptions.add(new SelectOption('FM IF System Ics','FM IF System Ics'));
            lstOptions.add(new SelectOption('Mixers','Mixers'));
            lstOptions.add(new SelectOption('Modulators','Modulators'));
            lstOptions.add(new SelectOption('PLL\'s and Oscillators','PLL\'s and Oscillators'));
            lstOptions.add(new SelectOption('Power transistors','Power transistors'));
            lstOptions.add(new SelectOption('Sub-GHz RF','Sub-GHz RF'));
            lstOptions.add(new SelectOption('Switches','Switches'));
            lstOptions.add(new SelectOption('Transmitters','Transmitters'));
            lstOptions.add(new SelectOption('Transistors','Transistors'));
            lstOptions.add(new SelectOption('Tuners','Tuners'));
            lstOptions.add(new SelectOption('Wireless Microcontroller','Wireless Microcontroller'));
        }
        else if(strCategory == 'Sensors')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Angular sensors','Angular sensors'));
            lstOptions.add(new SelectOption('Capacitive sensors','Capacitive sensors'));
            lstOptions.add(new SelectOption('I²C temperature/voltage monitors','I²C temperature/voltage monitors'));
            lstOptions.add(new SelectOption('Rotational sensors','Rotational sensors'));
            lstOptions.add(new SelectOption('Temperature sensors','Temperature sensors'));
        }
        else if(strCategory == 'Thyristors')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('3-Quadrant Triacs (High Commutation)','3-Quadrant Triacs (High Commutation)'));
            lstOptions.add(new SelectOption('4-Quadrant Triacs','4-Quadrant Triacs'));
            lstOptions.add(new SelectOption('AC Thyristor Triacs','AC Thyristor Triacs'));
            lstOptions.add(new SelectOption('AC Thyristors','AC Thyristors'));
            lstOptions.add(new SelectOption('High voltage bipolar transistors for lighting, SMPS and industrial applications','High voltage bipolar transistors for lighting, SMPS and industrial applications'));
            lstOptions.add(new SelectOption('SCRs','SCRs'));
        }
        else if(strCategory == 'TV and STB front ends')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Cable and terrestrial silicon tuners','Cable and terrestrial silicon tuners'));
            lstOptions.add(new SelectOption('Digital demodulators','Digital demodulators'));
            lstOptions.add(new SelectOption('Dual satellite silicon tuners','Dual satellite silicon tuners'));
            lstOptions.add(new SelectOption('IF demodulators','IF demodulators'));
            lstOptions.add(new SelectOption('Satellite silicon tuners','Satellite silicon tuners'));
            lstOptions.add(new SelectOption('Silicon Tuners','Silicon Tuners'));
            lstOptions.add(new SelectOption('Single satellite silicon tuners','Single satellite silicon tuners'));
        }
        else if(strCategory == 'General Products')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('No Specific Category','No Specific Category'));           
        }
        else if(strCategory == 'Human Resources')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Human Resources General','Human Resources General'));
            lstOptions.add(new SelectOption('Employee Verification','Employee Verification'));
        }
        else if(strCategory == 'Public Relations')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Public Relations','Public Relations'));
            lstOptions.add(new SelectOption('Press Release','Press Release'));
        }
        else if(strCategory == 'Logistics')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('EOL','EOL'));
            lstOptions.add(new SelectOption('Import / Export','Import / Export'));
            lstOptions.add(new SelectOption('HTS / ECCN','HTS / ECCN'));
        }
        else if(strCategory == 'No Specific Category')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('No Specific Category','No Specific Category'));
        }
        else
        {
            lstOptions.add(new SelectOption('--None--','--None--'));
        }

        return lstOptions;
    }  */
    
    public List<SelectOption> getCategories()
    {
       lstOptions = new List<SelectOption>();
       If(strProduct =='Audio and Media Processing')
       {
       lstOptions.add(new SelectOption('--None--','--None--'));    
       lstOptions.add(new SelectOption('AM/FM Radio and Audio','AM/FM Radio and Audio'));
       /*lstOptions.add(new SelectOption('Analog Signal Processors','Analog Signal Processors'));
       lstOptions.add(new SelectOption('Car Radio & Audio DSP Solutions','Car Radio & Audio DSP Solutions'));
       lstOptions.add(new SelectOption('One-Chip Radio','One-Chip Radio'));
       lstOptions.add(new SelectOption('Single-Chip Tuner/ASP (car radio)','Single-Chip Tuner/ASP (car radio)')); */
       lstOptions.add(new SelectOption('Audio Amplifiers','Audio Amplifiers'));
      // lstOptions.add(new SelectOption('Amplifiers for Portable Devices','Amplifiers for Portable Devices'));
       lstOptions.add(new SelectOption('Data Converters','Data Converters'));       
       lstOptions.add(new SelectOption('Digital Demodulators','Digital Demodulators'));
       lstOptions.add(new SelectOption('IF Demodulators','IF Demodulators'));
       lstOptions.add(new SelectOption('Media Processors','Media Processors'));       
       lstOptions.add(new SelectOption('Multi Standard Digital Radio','Multi Standard Digital Radio'));
       lstOptions.add(new SelectOption('Silicon Tuners','Silicon Tuners'));
       }
       else if(strProduct == 'Discretes and Logic')
       {
       lstOptions.add(new SelectOption('--None--','--None--'));
       lstOptions.add(new SelectOption('Bipolar Transistors','Bipolar Transistors'));
       lstOptions.add(new SelectOption('Diodes','Diodes'));
       lstOptions.add(new SelectOption('ESD Protection','ESD Protection'));
       lstOptions.add(new SelectOption('Logic','Logic'));
       lstOptions.add(new SelectOption('MOSFETs','MOSFETs'));
       }
       else if(strProduct == 'Identification and Security')
       {
       lstOptions.add(new SelectOption('--None--','--None--'));
       lstOptions.add(new SelectOption('Authentication','Authentication'));
       lstOptions.add(new SelectOption('Car Access and Immobilizers','Car Access and Immobilizers'));
       //lstOptions.add(new SelectOption('Passive Keyless Entry','Passive Keyless Entry'));
       //lstOptions.add(new SelectOption('Remote Keyless Entry','Remote Keyless Entry'));
       lstOptions.add(new SelectOption('NFC and Reader ICs','NFC and Reader ICs'));
       /*lstOptions.add(new SelectOption('NFC Controller Solutions','NFC Controller Solutions'));
       lstOptions.add(new SelectOption('Connected Tag Solutions','Connected Tag Solutions'));
       lstOptions.add(new SelectOption('Contact Smart Card Reader ICs','Contact Smart Card Reader ICs'));
       lstOptions.add(new SelectOption('MIFARE SAMs for Reader Systems','MIFARE SAMs for Reader Systems'));
       lstOptions.add(new SelectOption('HITAG Reader ICs','HITAG Reader ICs'));*/
       lstOptions.add(new SelectOption('Smart Card ICs','Smart Card ICs'));
       /*lstOptions.add(new SelectOption('FastPay Secure Contactless Payment','FastPay Secure Contactless Payment'));
       lstOptions.add(new SelectOption('MIFARE Smart Card ICs','MIFARE Smart Card ICs'));
       lstOptions.add(new SelectOption('SmartMX Contact Interface Controllers','SmartMX Contact Interface Controllers'));
       lstOptions.add(new SelectOption('SmartMC Dual Interface Controllers','SmartMC Dual Interface Controllers'));*/
       lstOptions.add(new SelectOption('Smart Label and Tag ICs','Smart Label and Tag ICs'));
       /*lstOptions.add(new SelectOption('Connected Tag Solutions','Connected Tag Solutions'));
       lstOptions.add(new SelectOption('HITAG Reader ICs','HITAG Reader ICs'));*/
       lstOptions.add(new SelectOption('Identificatoin and Security and Surveillance IP Camera','Identificatoin and Security and Surveillance IP Camera'));
       }
       else if(strProduct == 'Interface and Connectivity')
       {
       lstOptions.add(new SelectOption('--None--','--None--'));
       lstOptions.add(new SelectOption('Interface and System Management','Interface and System Management'));
       lstOptions.add(new SelectOption('Wired Connectivity','Wired Connectivity'));
       lstOptions.add(new SelectOption('Wireless Connectivity','Wireless Connectivity'));
       }
       else if(strProduct == 'Microcontrollers and Processors')
       {
       lstOptions.add(new SelectOption('--None--','--None--'));
       lstOptions.add(new SelectOption('ARM Processors','ARM Processors'));
       lstOptions.add(new SelectOption('Power Architecture','Power Architecture'));
       lstOptions.add(new SelectOption('More Processors','More Processors'));
       }
       else if(strProduct == 'Power Management')
       {
       lstOptions.add(new SelectOption('--None--','--None--'));
       lstOptions.add(new SelectOption('Wireless Power Receivers','Wireless Power Receivers'));
       lstOptions.add(new SelectOption('Wireless Power Transmitters','Wireless Power Transmitters'));
       lstOptions.add(new SelectOption('Wireless Charging ICs','Wireless Charging ICs'));
       lstOptions.add(new SelectOption('AC-to-DC Solutions','AC-to-DC Solutions'));
       lstOptions.add(new SelectOption('Battery Management','Battery Management'));
       lstOptions.add(new SelectOption('Energy Measurement ICs','Energy Measurement ICs'));
       lstOptions.add(new SelectOption('Engine and DC Motor Control','Engine and DC Motor Control'));
       lstOptions.add(new SelectOption('Lighting Driver and Controller ICs','Lighting Driver and Controller ICs'));
       lstOptions.add(new SelectOption('Linear Regulators','Linear Regulators'));
       lstOptions.add(new SelectOption('Linear Voltage Regulators','Linear Voltage Regulators'));
       /*lstOptions.add(new SelectOption('DDR Bus Termination Regulator','DDR Bus Termination Regulator'));
       lstOptions.add(new SelectOption('Shunt Regulators','Shunt Regulators'));
       lstOptions.add(new SelectOption('LDO Low-Voltage','LDO Low-Voltage'));
       lstOptions.add(new SelectOption('Multilinear Voltage Regulators','Multilinear Voltage Regulators'));*/
       lstOptions.add(new SelectOption('Motor Drive ICs','Motor Drive ICs'));
       lstOptions.add(new SelectOption('PMICs','PMICs'));
       lstOptions.add(new SelectOption('Power over Ethernet (PoE)','Power over Ethernet (PoE)'));
       lstOptions.add(new SelectOption('Switching Regulator','Switching Regulator'));
       }
       else if(strProduct == 'RF')
       {
       lstOptions.add(new SelectOption('--None--','--None--'));
       lstOptions.add(new SelectOption('RF Power Transistors','RF Power Transistors'));
       lstOptions.add(new SelectOption('RF Amplifiers - Low / Medium power','RF Amplifiers - Low / Medium power'));
       lstOptions.add(new SelectOption('Automotive Radar','Automotive Radar'));
       lstOptions.add(new SelectOption('Control Circuits','Control Circuits'));
       lstOptions.add(new SelectOption('Digital Front End Processors','Digital Front End Processors'));
       lstOptions.add(new SelectOption('Low Power Tx / Rx','Low Power Tx / Rx'));
       lstOptions.add(new SelectOption('Mixers','Mixers'));
       lstOptions.add(new SelectOption('PLLs and Oscillators','PLLs and Oscillators'));
       lstOptions.add(new SelectOption('Transistors','Transistors'));
       lstOptions.add(new SelectOption('Tuners','Tuners'));
       }
       else if(strProduct == 'Sensors')
       { 
       lstOptions.add(new SelectOption('--None--','--None--')); 
       lstOptions.add(new SelectOption('6-Axis Sensors','6-Axis Sensors'));
       lstOptions.add(new SelectOption('Accelerometers','Accelerometers'));
       lstOptions.add(new SelectOption('Angular Sensors','Angular Sensors'));
       lstOptions.add(new SelectOption('Capacitive  Sensors','Capacitive  Sensors'));
       lstOptions.add(new SelectOption('I2C Temperature & Voltage Monitors','I2C Temperature & Voltage Monitors'));
       lstOptions.add(new SelectOption('Gyroscopes','Gyroscopes'));
       lstOptions.add(new SelectOption('Intelligent Sensors and Sensor Hubs','Intelligent Sensors and Sensor Hubs'));
       lstOptions.add(new SelectOption('Magnetometers','Magnetometers'));
       lstOptions.add(new SelectOption('Pressure Sensors','Pressure Sensors'));
       lstOptions.add(new SelectOption('Rotational Sensors','Rotational Sensors'));
       lstOptions.add(new SelectOption('Temperature Sensors','Temperature Sensors'));
       lstOptions.add(new SelectOption('Touch Sensors','Touch Sensors'));
       }
        else if(strCategory == 'Others')
        {
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Other','Other'));
        }
       else
        {
            lstOptions.add(new SelectOption('--None--','--None--'));
        }
       return lstOptions;
   
    }
    
     public List<SelectOption> getsubCategories ()
    {
        lstOptions = new List<SelectOption>();
        if(strCategory == 'AM / FM radio and audio')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Analog Signal Processors','Analog Signal Processors')); 
            lstOptions.add(new SelectOption('Car Radio & Audio DSP Solutions','Car Radio & Audio DSP Solutions'));
            lstOptions.add(new SelectOption('One-Chip Radio','One-Chip Radio'));
            lstOptions.add(new SelectOption('Single-Chip Tuner/ASP (car radio)','Single-Chip Tuner/ASP (car radio)'));
        }
       
        else if(strCategory == 'Audio amplifiers')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Amplifiers for Portable Devices','Amplifiers for Portable Devices'));
            lstOptions.add(new SelectOption('Class-AB','Class-AB'));
            lstOptions.add(new SelectOption('Class-AB (car radio)','Class-AB (car radio)'));
            lstOptions.add(new SelectOption('Class-D','Class-D'));
            lstOptions.add(new SelectOption('Class-D (car radio)','Class-D (car radio)'));
        }
        else if(strCategory == 'Data Converters')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Audio Converters','Audio Converters'));
            lstOptions.add(new SelectOption('Imaging Front-End','Imaging Front-End'));
            lstOptions.add(new SelectOption('Video Converters','Video Converters'));
        }
        else if(strCategory == 'Media Processors')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('CD-DVD Processors','CD-DVD Processors'));
            lstOptions.add(new SelectOption('Digital Radio Processors','Digital Radio Processors'));
            lstOptions.add(new SelectOption('Multimedia Processors','Multimedia Processors'));
            lstOptions.add(new SelectOption('Optical Storage','Optical Storage'));
            lstOptions.add(new SelectOption('Zero IF Down Converters','Zero IF Down Converters'));
        }
        else if(strCategory == 'Silicon Tuners')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Cable and Terrestrial Silicon Tuners','Cable and Terrestrial Silicon Tuners'));
            lstOptions.add(new SelectOption('Single Satellite Silicon Tuners','Single Satellite Silicon Tuners'));
        }
        else if(strCategory == 'Bipolar Transistors')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Avionics Bipolar Transistors','Avionics Bipolar Transistors'));
            lstOptions.add(new SelectOption('General Purpose Bipolar Transistors','General Purpose Bipolar Transistors'));
            lstOptions.add(new SelectOption('High Voltage Bipolar Transistors for Lighting, SMPS and Industrial Applications','High Voltage Bipolar Transistors for Lighting, SMPS and Industrial Applications'));
            lstOptions.add(new SelectOption('Low VCEsat (BISS) Transistors','Low VCEsat (BISS) Transistors'));
            lstOptions.add(new SelectOption('Resistor Equipped Transistors (RETs)','Resistor Equipped Transistors (RETs)'));
            lstOptions.add(new SelectOption('RF Bipolar Transistors','RF Bipolar Transistors'));
        }
        else if(strCategory == 'Diodes')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Band Switching Diodes','Band Switching Diodes'));
            lstOptions.add(new SelectOption('PIN Diodes','PIN Diodes'));
            lstOptions.add(new SelectOption('General Purpose Schottky Diodes < 250 mA','General Purpose Schottky Diodes < 250 mA'));
            lstOptions.add(new SelectOption('Medium Power Schottky Diodes > 200 mA','Medium Power Schottky Diodes > 200 mA'));
            lstOptions.add(new SelectOption('Schottky Diodes','Schottky Diodes'));
            lstOptions.add(new SelectOption('Varicap Diodes','Varicap Diodes'));
            lstOptions.add(new SelectOption('Power Diodes (hyperfast recovery)','Power Diodes (hyperfast recovery)'));
            lstOptions.add(new SelectOption('Power Diodes (ultrafast recovery)','Power Diodes (ultrafast recovery)'));
            lstOptions.add(new SelectOption('Power Schottky Diodes','Power Schottky Diodes'));
            lstOptions.add(new SelectOption('Silicon Carbide Diodes','Silicon Carbide Diodes'));
            lstOptions.add(new SelectOption('Switching Diodes','Switching Diodes'));
            lstOptions.add(new SelectOption('Zener Diodes','Zener Diodes'));            
        }
        else if(strCategory == 'ESD Protection')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('General ESD Protection Devices','General ESD Protection Devices'));
            lstOptions.add(new SelectOption('Application-Specific ESD and ESD/EMI Solutions','Application-Specific ESD and ESD/EMI Solutions'));
            lstOptions.add(new SelectOption('Transient Voltage Suppressor (TVS) Diodes','Transient Voltage Suppressor (TVS) Diodes'));
        }
        else if(strCategory == 'Logic')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Analog Switches','Analog Switches'));
            lstOptions.add(new SelectOption('Buffers/Inverters/Drivers','Buffers/Inverters/Drivers'));
            lstOptions.add(new SelectOption('Bus Switches','Bus Switches'));
            lstOptions.add(new SelectOption('Comparators','Comparators'));
            lstOptions.add(new SelectOption('Counters/Frequency Dividers','Counters/Frequency Dividers'));
            lstOptions.add(new SelectOption('Decoders/Demultiplexers','Decoders/Demultiplexers'));
            lstOptions.add(new SelectOption('Digital Comparators','Digital Comparators'));
            lstOptions.add(new SelectOption('Digital Multiplexers','Digital Multiplexers'));
            lstOptions.add(new SelectOption('Encoders','Encoders'));
            lstOptions.add(new SelectOption('FIFO Registers','FIFO Registers'));
            lstOptions.add(new SelectOption('Flip-Flops','Flip-Flops'));
            lstOptions.add(new SelectOption('Full Adders','Full Adders'));
            lstOptions.add(new SelectOption('Gates','Gates'));
            lstOptions.add(new SelectOption('Latches/Registered Drivers','Latches/Registered Drivers'));
            lstOptions.add(new SelectOption('Level Shifters/Translators','Level Shifters/Translators'));
            lstOptions.add(new SelectOption('Load Switches','Load Switches'));
            lstOptions.add(new SelectOption('Multivibrators','Multivibrators'));
            lstOptions.add(new SelectOption('Parity Generators/Checkers','Parity Generators/Checkers')); 
            lstOptions.add(new SelectOption('Phase Locked Loops','Phase Locked Loops'));
            lstOptions.add(new SelectOption('Printer Interfaces','Printer Interfaces'));
            lstOptions.add(new SelectOption('Schmitt-Triggers','Schmitt-Triggers'));
            lstOptions.add(new SelectOption('Shift Registers','Shift Registers'));
            lstOptions.add(new SelectOption('Transceivers','Transceivers'));              
        }
        else if(strCategory == 'MOSFETs')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Automotive MOSFETs','Automotive MOSFETs'));
            lstOptions.add(new SelectOption('High Side Switches','High Side Switches'));
            lstOptions.add(new SelectOption('Low Side Switches','Low Side Switches'));
            lstOptions.add(new SelectOption('Pre-Drivers','Pre-Drivers'));
            lstOptions.add(new SelectOption('Squib Drivers','Squib Drivers'));
            lstOptions.add(new SelectOption('Standard MOSFETs','Standard MOSFETs'));
            lstOptions.add(new SelectOption('RF Small-Signal MOSFETs','RF Small-Signal MOSFETs'));
        }
        else if(strCategory == 'Car Access and Immobilizers')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Automotive NFC','Automotive NFC'));
            lstOptions.add(new SelectOption('Immobilizer','Immobilizer'));
            lstOptions.add(new SelectOption('Passive Keyless Entry','Passive Keyless Entry'));
            lstOptions.add(new SelectOption('Remote keyless entry','Remote keyless entry'));
            lstOptions.add(new SelectOption('RF Link','RF Link'));
        }
       
       
        else if(strCategory == 'NFC and reader ICs')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('NFC Controller Solutions','NFC Controller Solutions'));
            lstOptions.add(new SelectOption('NFC frontend solutions','NFC frontend solutions'));
            lstOptions.add(new SelectOption('Connected Tag Solutions','Connected Tag Solutions'));
            lstOptions.add(new SelectOption('Contact smart card reader ICs','Contact smart card reader ICs'));
            lstOptions.add(new SelectOption('MIFARE SAMs for reader systems','MIFARE SAMs for reader systems'));
            lstOptions.add(new SelectOption('HITAG reader ICs','HITAG reader ICs'));
        }
       
       
        
        else if(strCategory == 'Smart card ICs')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('FastPay secure contactless payment','FastPay secure contactless payment'));
            lstOptions.add(new SelectOption('MIFARE smart card ICs','MIFARE smart card ICs'));
            lstOptions.add(new SelectOption('SmarteID','SmarteID'));
            lstOptions.add(new SelectOption('SmartMX contact interface controllers','SmartMX contact interface controllers'));
            lstOptions.add(new SelectOption('SmartMX dual interface controllers','SmartMX dual interface controllers'));
            lstOptions.add(new SelectOption('SmartMX2-P40','SmartMX2-P40'));
            lstOptions.add(new SelectOption('SmartMX2-P60','SmartMX2-P60'));
        }
     
       
         else if(strCategory == 'Smart Label and Tag ICs')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('ICODE','ICODE'));
            lstOptions.add(new SelectOption('NTAG','NTAG'));
            lstOptions.add(new SelectOption('UCODE','UCODE'));
            lstOptions.add(new SelectOption('UCODE DNA','UCODE DNA'));
             lstOptions.add(new SelectOption('Connected tag solutions','Connected tag solutions'));
            lstOptions.add(new SelectOption('HITAG','HITAG'));
            lstOptions.add(new SelectOption('HITAG reader ICs','HITAG reader ICs'));
        }
      
        else if(strCategory == 'Interface and System Management')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Analog Watch Motor Drivers','Analog Watch Motor Drivers'));
            lstOptions.add(new SelectOption('Bridges','Bridges'));
            lstOptions.add(new SelectOption('Car Radio On-Off Logic','Car Radio On-Off Logic'));
            lstOptions.add(new SelectOption('Clock Distribution','Clock Distribution'));
            lstOptions.add(new SelectOption('Clocks with LCD Drivers','Clocks with LCD Drivers'));
            lstOptions.add(new SelectOption('DSI and PSI5 Components','DSI and PSI5 Components'));
            lstOptions.add(new SelectOption('GTL to TTL Translators','GTL to TTL Translators'));
            lstOptions.add(new SelectOption('High-Speed Multiplexer','High-Speed Multiplexer'));
            lstOptions.add(new SelectOption('I²C','I²C'));
            lstOptions.add(new SelectOption('Isolated Communications Devices','Isolated Communications Devices'));
            lstOptions.add(new SelectOption('LCD Drivers','LCD Drivers'));
            lstOptions.add(new SelectOption('Memory Data Switches','Memory Data Switches'));
            lstOptions.add(new SelectOption('PCI/PCI Express','PCI/PCI Express'));
            lstOptions.add(new SelectOption('Real-Time Clocks','Real-Time Clocks'));  
            lstOptions.add(new SelectOption('SDIO Host controller','SDIO Host controller'));
            lstOptions.add(new SelectOption('Switch monitoring ICs','Switch monitoring ICs'));
            lstOptions.add(new SelectOption('Video SERDES','Video SERDES'));           
        }
        else if(strCategory == 'Wired Connectivity')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('CAN Protocol Controllers','CAN Protocol Controllers'));
            lstOptions.add(new SelectOption('CAN/LIN/FlexRay Transceivers','CAN/LIN/FlexRay Transceivers'));
            lstOptions.add(new SelectOption('CAN/LIN System Basis Chips','CAN/LIN System Basis Chips'));
            lstOptions.add(new SelectOption('System Basis Chip','System Basis Chip'));
            lstOptions.add(new SelectOption('Micro-USB Interface','Micro-USB Interface'));
            lstOptions.add(new SelectOption('Modems','Modems'));
            lstOptions.add(new SelectOption('Signal Conditioners - USB 3.0','Signal Conditioners - USB 3.0'));
            lstOptions.add(new SelectOption('USB Host Controllers','USB Host Controllers'));
                                
        }
         else if(strCategory == 'Wireless Connectivity')
        {
            lstOptions.add(new SelectOption('2.4 GHz Wireless Solutions','2.4 GHz Wireless Solutions'));
            lstOptions.add(new SelectOption('Sub-1 GHz Wireless Solutions','Sub-1 GHz Wireless Solutions'));
            lstOptions.add(new SelectOption('AISG Transceivers and Controllers','AISG Transceivers and Controllers'));
            lstOptions.add(new SelectOption('NFC and Reader ICs','NFC and Reader ICs'));
            lstOptions.add(new SelectOption('UARTs','UARTs'));
            lstOptions.add(new SelectOption('JNS16x IEEE802.15.4 (ZigBee/JenNet) SoC','JNS16x IEEE802.15.4 (ZigBee/JenNet) SoC'));
            lstOptions.add(new SelectOption('QN902x Bluetooth Smart SoC','QN902x Bluetooth Smart SoC'));      
        }
        else if(strCategory == 'ARM Processors')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('i.MX Applications Processors based on ARM Cores','i.MX Applications Processors based on ARM Cores'));
            lstOptions.add(new SelectOption('Kinetis ARM Cortex-M MCUs','Kinetis ARM Cortex-M MCUs'));
            lstOptions.add(new SelectOption('LPC ARM Cortex-M MCUs','LPC ARM Cortex-M MCUs'));
            lstOptions.add(new SelectOption('LPC ARM7 ARM9 MCUs','LPC ARM7 ARM9 MCUs'));
            lstOptions.add(new SelectOption('MAC57Dxxx 32-bit ARM MCUs','MAC57Dxxx 32-bit ARM MCUs'));
            lstOptions.add(new SelectOption('MAC7100 (Legacy)','MAC7100 (Legacy)'));
            lstOptions.add(new SelectOption('QorIQ ARM','QorIQ ARM'));
            lstOptions.add(new SelectOption('S32 V200 ARM Cortex-A53 MCUs','S32 V200 ARM Cortex-A53 MCUs'));
            lstOptions.add(new SelectOption('VFxxx Controller Solutions based on ARM Cores','VFxxx Controller Solutions based on ARM Cores'));
            
        }
        else if(strCategory == 'Power Architecture')
        {
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Host and Integrated Host Processors (8xxx,7xxx,7xx,6xx)','Host and Integrated Host Processors (8xxx,7xxx,7xx,6xx)'));
            lstOptions.add(new SelectOption('MPC5xxx/5xxx 32-bit MCUs','MPC5xxx/5xxx 32-bit MCUs'));
            lstOptions.add(new SelectOption('PowerQUICC Communications Processors','PowerQUICC Communications Processors'));
            lstOptions.add(new SelectOption('QorIQ Power Architecture','QorIQ Power Architecture'));
        }
         else if(strCategory == 'More Processors')
        {
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('8/16-bit MCUs','8/16-bit MCUs'));
            lstOptions.add(new SelectOption('32-bit MCUs/MPUs','32-bit MCUs/MPUs'));
            lstOptions.add(new SelectOption('Application Specific MCUs/MPUs','Application Specific MCUs/MPUs'));
            lstOptions.add(new SelectOption('Digital Signal Processors/Controllers','Digital Signal Processors/Controllers'));
        }
        else if(strCategory == 'AC-to-DC Solutions')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('AC-DC Controllers','AC-DC Controllers'));
            lstOptions.add(new SelectOption('AC-DC Controllers with Integrated PFC','AC-DC Controllers with Integrated PFC'));
            lstOptions.add(new SelectOption('AC-DC Controllers with Integrated Power Switch','AC-DC Controllers with Integrated Power Switch'));
            lstOptions.add(new SelectOption('Secondary Side Controllers','Secondary Side Controllers'));
        }
        else if(strCategory == 'Battery Management')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Battery Cell Controllers','Battery Cell Controllers'));
            lstOptions.add(new SelectOption('Battery Chargers','Battery Chargers'));
            lstOptions.add(new SelectOption('Battery Sensors','Battery Sensors'));
        }
         else if(strCategory == 'Engine and DC Motor Control')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('H-Bridges','H-Bridges'));
            lstOptions.add(new SelectOption('High-Current Motor Control','High-Current Motor Control'));
            lstOptions.add(new SelectOption('MCU and Injection Driver','MCU and Injection Driver'));
            lstOptions.add(new SelectOption('Powertrain/Engine Control','Powertrain/Engine Control'));
        }
        else if(strCategory == 'Lighting Driver and Controller ICs')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('AC LED Driver ICs, Dimmable','AC LED Driver ICs, Dimmable'));
            lstOptions.add(new SelectOption('AC LED Driver ICs, Non-Dimmable','AC LED Driver ICs, Non-Dimmable'));
            lstOptions.add(new SelectOption('AC LED Driver ICs, High-Power + PFC','AC LED Driver ICs, High-Power + PFC'));
            lstOptions.add(new SelectOption('LED Drivers','LED Drivers'));
            lstOptions.add(new SelectOption('Automotive Lighting, LED Driver ICs','Automotive Lighting, LED Driver ICs'));
            lstOptions.add(new SelectOption('CFL and HF-TL Drivers - Dimmable','CFL and HF-TL Drivers - Dimmable'));
            lstOptions.add(new SelectOption('CFL and HF-TL Drivers - Fixed Output','CFL and HF-TL Drivers - Fixed Output'));
            lstOptions.add(new SelectOption('HID Controllers','HID Controllers'));
            lstOptions.add(new SelectOption('I²C LED Display Control','I²C LED Display Control'));
            lstOptions.add(new SelectOption('LED Flash Driver ICs','LED Flash Driver ICs'));
            lstOptions.add(new SelectOption('Light Position Controllers','Light Position Controllers'));                         
        }
         else if(strCategory == 'Linear voltage regulators')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('DDR bus termination regulator','DDR bus termination regulator'));
            lstOptions.add(new SelectOption('Shunt regulators','Shunt regulators'));
            lstOptions.add(new SelectOption('LDO low voltage','LDO low voltage'));
            lstOptions.add(new SelectOption('Multiple output regulators','Multiple output regulators'));
        }
        
       
        else if(strCategory == 'Motor Drive ICs')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Brushless DC Motor Drive Circuits','Brushless DC Motor Drive Circuits'));
            lstOptions.add(new SelectOption('Dual BTL Power Drivers','Dual BTL Power Drivers'));
        }
        else if(strCategory == 'PMICs')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Configurable PMICs (PF Series)','Configurable PMICs (PF Series)'));
            lstOptions.add(new SelectOption('PMIC for Networking Processors','PMIC for Networking Processors'));
            lstOptions.add(new SelectOption('PMICs for i.MX Processors','PMICs for i.MX Processors'));
        }
        else if(strCategory == 'RF Power Transistors')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Cellular Infrastructure','Cellular Infrastructure'));
            lstOptions.add(new SelectOption('Cooking','Cooking'));
            lstOptions.add(new SelectOption('Military','Military'));
            lstOptions.add(new SelectOption('Mobile Radio','Mobile Radio'));
            lstOptions.add(new SelectOption('Industrial, Scientific and Medical','Industrial, Scientific and Medical'));
            lstOptions.add(new SelectOption('Broadcast','Broadcast'));
            lstOptions.add(new SelectOption('Commercial Aerospace','Commercial Aerospace'));
            
        }
        else if(strCategory == 'RF Amplifiers - Low / Medium power ')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('GaAs Linear Power Transistors','GaAs Linear Power Transistors'));
            lstOptions.add(new SelectOption('Low Noise Amplifiers (LNAs)','Low Noise Amplifiers (LNAs)'));
            lstOptions.add(new SelectOption('Medium Power Amplifiers','Medium Power Amplifiers'));
            lstOptions.add(new SelectOption('Variable Gain Amplifiers','Variable Gain Amplifiers'));
            lstOptions.add(new SelectOption('Wideband Amplifiers','Wideband Amplifiers'));
        }
        else if(strCategory == 'Control Circuits')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Advanced Doherty Alignment Module (ADAM)','Advanced Doherty Alignment Module (ADAM)'));
            lstOptions.add(new SelectOption('Switches','Switches'));
            lstOptions.add(new SelectOption('Attenuators','Attenuators'));
        }
        else if(strCategory == 'Low Power Tx / Rx')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Modulators','Modulators'));
            lstOptions.add(new SelectOption('Sub-GHz RF','Sub-GHz RF'));
            lstOptions.add(new SelectOption('Transmitters','Transmitters'));
        }
        else if(strCategory == 'Mixers')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Low Power FM IF Systems','Low Power FM IF Systems'));
            lstOptions.add(new SelectOption('Mixer without Integrated LO','Mixer without Integrated LO'));
            lstOptions.add(new SelectOption('Mixer with Integrated LO','Mixer with Integrated LO'));
        }
        else if(strCategory == 'PLLs and Oscillators')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Integrated PLL VCOs','Integrated PLL VCOs'));
            lstOptions.add(new SelectOption('Microwave LO Generators','Microwave LO Generators'));
        }
        else if(strCategory == 'Transistors')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('MOSFET','MOSFET'));
            lstOptions.add(new SelectOption('Bipolar','Bipolar'));
        }
        else if(strCategory == 'Tuners')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Car Radio Tuners- Analog IF','Car Radio Tuners- Analog IF'));
            lstOptions.add(new SelectOption('Car Radio Tuners - Digital IF','Car Radio Tuners - Digital IF'));
            lstOptions.add(new SelectOption('FSK/ASK Receiver','FSK/ASK Receiver'));
            lstOptions.add(new SelectOption('Radio Receiver ICs','Radio Receiver ICs'));
        }
         else if(strCategory == 'Accelerometers')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('1-Axis Accelerometers','1-Axis Accelerometers'));
            lstOptions.add(new SelectOption('2-Axis Accelerometers','2-Axis Accelerometers'));
            lstOptions.add(new SelectOption('3-Axis Accelerometers','3-Axis Accelerometers'));
            lstOptions.add(new SelectOption('High g Sensors','High g Sensors'));
            lstOptions.add(new SelectOption('Low g Sensors','Low g Sensors'));
            lstOptions.add(new SelectOption('Medium g Sensors','Medium g Sensors'));
        }
         else if(strCategory == 'Pressure Sensors')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Barometric Pressure 15 to 115 kPa','Barometric Pressure 15 to 115 kPa'));
            lstOptions.add(new SelectOption('Compensated','Compensated'));
            lstOptions.add(new SelectOption('Differential/Gauge up to 10 kPa','Differential/Gauge up to 10 kPa'));
            lstOptions.add(new SelectOption('Differential/Gauge up to 1000 kPa','Differential/Gauge up to 1000 kPa'));
            lstOptions.add(new SelectOption('Differential/Gauge up to 115 kPa','Differential/Gauge up to 115 kPa'));
            lstOptions.add(new SelectOption('Digital','Digital'));
            lstOptions.add(new SelectOption('Integrated','Integrated'));
            lstOptions.add(new SelectOption('LPG and CNG Gas 15 to 400 kPa','LPG and CNG Gas 15 to 400 kPa'));
            lstOptions.add(new SelectOption('Tire Pressure Monitoring Sensors','Tire Pressure Monitoring Sensors'));
            lstOptions.add(new SelectOption('Uncompensated','Uncompensated'));
            lstOptions.add(new SelectOption('Vacuum Sensors -50 to -115 kPa','Vacuum Sensors -50 to -115 kPa'));

        }
        else if(strCategory == 'Others')
        {
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Other','Other'));
        }
        else
        {
            lstOptions.add(new SelectOption('--None--','--None--'));
        }
        return lstOptions;   
    }
    
     public List<SelectOption> getTopics() 
     {
        lstOptions = new List<SelectOption>();
        lstOptions.add(new SelectOption('--None--','--None--'));       
        lstOptions.add(new SelectOption('Documentation','Documentation'));
        lstOptions.add(new SelectOption('Hardware Product Support','Hardware Product Support'));
        lstOptions.add(new SelectOption('Product Change Notification','Product Change Notification'));
        lstOptions.add(new SelectOption('ECO Product Content','ECO Product Content'));
        lstOptions.add(new SelectOption('Software Product Support','Software Product Support'));
        lstOptions.add(new SelectOption('Others','Others'));
        
        return lstOptions;
     
    }
    
     public List<SelectOption> getSubTopics() 
     {
         lstOptions = new List<SelectOption>();
        if(strTopics == 'Documentation')
        {   
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Cannot Locate Document','Cannot Locate Document')); 
            lstOptions.add(new SelectOption('Content Question','Content Question'));           
        }
        else if(strTopics == 'Product Change Notification')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Need Clarification','Need Clarification'));
            lstOptions.add(new SelectOption('Need further information data','Need further information data')); 
            lstOptions.add(new SelectOption('Others','Others')); 
        }
         else if(strTopics == 'ECO Product Content')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('RoHS/Reach','RoHS/Reach'));
            lstOptions.add(new SelectOption('Conflict Minerals','Conflict Minerals'));
            lstOptions.add(new SelectOption('IMDS/CAMDS','IMDS/CAMDS')); 
            lstOptions.add(new SelectOption('Others','Others'));
            
        }
        else if(strTopics == 'Software Product Support')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('License Issue','License Issue'));
            lstOptions.add(new SelectOption('SDK / BSP','SDK / BSP'));
            lstOptions.add(new SelectOption('Runtime Software / RTOS','Runtime Software / RTOS')); 
            lstOptions.add(new SelectOption('Configuration Tools','Configuration Tools'));
            lstOptions.add(new SelectOption('IDE Tools','IDE Tools')); 
            lstOptions.add(new SelectOption('Others','Others'));
        }
        else if(strTopics == 'Others')
        {    
            lstOptions.add(new SelectOption('--None--','--None--'));
            lstOptions.add(new SelectOption('Quality (FIT / MTBF)','Quality (FIT / MTBF)'));
            lstOptions.add(new SelectOption('Package/Packing/Assembly/Soldering Profile','Package/Packing/Assembly/Soldering Profile'));
            lstOptions.add(new SelectOption('Longevity/Obsolescence','Longevity/Obsolescence'));
            lstOptions.add(new SelectOption('University Program','University Program'));
            lstOptions.add(new SelectOption('Others','Others'));
        }
        else
        {
            lstOptions.add(new SelectOption('--None--','--None--'));
        }
        return lstOptions;
    }
     public List<SelectOption> getPriorities() 
     {
        lstOptions = new List<SelectOption>();
        Schema.DescribeFieldResult fieldResult = Case.Priority.getDescribe();
        List<Schema.PicklistEntry> lstPicklist = fieldResult.getPicklistValues();
        lstOptions.add(new SelectOption('--None--','--None--'));
        for( Schema.PicklistEntry picklist : lstPicklist)
        {
            lstOptions.add(new SelectOption(picklist.getLabel(), picklist.getValue()));
        }        
        return lstOptions;
    }
    
     
     public List<SelectOption> getJobTitles() 
     {
        lstOptions = new List<SelectOption>();
        Schema.DescribeFieldResult fieldResult =
        Case.JobTitle__c.getDescribe();
        List<Schema.PicklistEntry> lstPicklist = fieldResult.getPicklistValues();
        lstOptions.add(new SelectOption('--None--','--None--'));        
        for( Schema.PicklistEntry picklist : lstPicklist)
        {
            lstOptions.add(new SelectOption(picklist.getLabel(), picklist.getValue()));
        }
        return lstOptions;
    }
    
     public List<SelectOption> getCountries() 
     {
        lstOptions = new List<SelectOption>();
        Schema.DescribeFieldResult fieldResult =
        Case.Community_Web_Country__c.getDescribe();
        List<Schema.PicklistEntry> lstPicklist = fieldResult.getPicklistValues();
        lstOptions.add(new SelectOption('--None--','--None--'));
        for( Schema.PicklistEntry picklist : lstPicklist)
        {
            lstOptions.add(new SelectOption(picklist.getLabel(), picklist.getValue()));
        }
        return lstOptions;
    }

  /*   public List<SelectOption> getQuestions() 
     {
        lstOptions = new List<SelectOption>();
        lstOptions.add(new SelectOption('--None--','--None--'));
        lstOptions.add(new SelectOption('RoHS/REACH/ChemicalContent','RoHS/REACH/ChemicalContent'));
        lstOptions.add(new SelectOption('Quality (FIT / MTBF)','Quality (FIT / MTBF)'));
        lstOptions.add(new SelectOption('Package/Packing/Assembly/Soldering Profile','Package/Packing/Assembly/Soldering Profile'));
        lstOptions.add(new SelectOption('Longevity/Obsolescence','Longevity/Obsolescence'));
        lstOptions.add(new SelectOption('Datasheets/ Errata/User Manual','Datasheets/ Errata/User Manual'));
        lstOptions.add(new SelectOption('Application Notes/Solutions','Application Notes/Solutions'));
        lstOptions.add(new SelectOption('Demoboards / Development tools','Demoboards / Development tools'));
        lstOptions.add(new SelectOption('Software (Sample codes)','Software (Sample codes)'));        
        lstOptions.add(new SelectOption('LPCOpen','LPCOpen'));
        lstOptions.add(new SelectOption('LPCXpresso IDE','LPCXpresso IDE'));
        lstOptions.add(new SelectOption('Public Relations','Public Relations'));
        lstOptions.add(new SelectOption('Others, please specify the nature of question','Others, please specify the nature of question'));
        
        return lstOptions;
    } */

     public List<SelectOption> getExpectedAnnualUnitVolumes() 
     {
        lstOptions = new List<SelectOption>();
        Schema.DescribeFieldResult fieldResult =
        Case.Expected_annual_unit_volume__c.getDescribe();
        List<Schema.PicklistEntry> lstPicklist = fieldResult.getPicklistValues();
        lstOptions.add(new SelectOption('--None--','--None--'));
        for( Schema.PicklistEntry picklist : lstPicklist)
        {
            lstOptions.add(new SelectOption(picklist.getLabel(), picklist.getValue()));
        }
        return lstOptions;
    }
    
     public List<SelectOption> getProjectStages() 
     {
        lstOptions = new List<SelectOption>();
        Schema.DescribeFieldResult fieldResult =
        Case.Project_Stage__c.getDescribe();
        List<Schema.PicklistEntry> lstPicklist = fieldResult.getPicklistValues();
        lstOptions.add(new SelectOption('--None--','--None--'));
        for( Schema.PicklistEntry picklist : lstPicklist)
        {
            lstOptions.add(new SelectOption(picklist.getLabel(), picklist.getValue()));
        }
        return lstOptions;
    }
    
     public List<SelectOption> getWebRegions() 
     {
        lstOptions = new List<SelectOption>();
        Schema.DescribeFieldResult fieldResult =
        Case.Web_Region__c.getDescribe();
        List<Schema.PicklistEntry> lstPicklist = fieldResult.getPicklistValues();
        lstOptions.add(new SelectOption('--None--','--None--'));
        for( Schema.PicklistEntry picklist : lstPicklist)
        {
            lstOptions.add(new SelectOption(picklist.getLabel(), picklist.getValue()));
        }      
        return lstOptions;
    }
    
    
    public boolean verifyCaptcha() 
    {
        // On first page load, form is empty, so no request to make yet
        if ( recaptchaChallenge == null || recaptchaResponse == null ) 
        {
            return false;
        }
        
        HttpResponse httpResponse = makeRequest(BASE_URL,'privatekey=' + PRIVATE_KEY +'&remoteip='  + remoteHost +
                        '&challenge=' + recaptchaChallenge +'&response='  + recaptchaResponse);
        
        if ( httpResponse!= null ) 
        {
            this.isVerified = (httpResponse.getBody().startsWithIgnoreCase('true'));
        }  
        
        return this.isVerified;         
    }
    
    public PageReference submitCase() 
    {
        PageReference successPage;
        if(strPriority == '--None--')
        {
            isShowmsg=true;
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Please Select Priority'));                        
        }
        
        else if(strJobTitle == '--None--')
        {
            isShowmsg=true;
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Please select the Job Title'));                        
        }
        else if(!Pattern.matches(EMAIL_REGEX,strEmail))
        {
            isShowmsg=true;
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Please Enter the Valid Email Address'));                        
        }
        else if(strCountry == '--None--')
        {
            isShowmsg=true;
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Please select the Country'));                        
        }
        else if(strQuestion == '--None--')
        {
            isShowmsg=true;
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Please select My question is related to'));                        
        }
        else if(strExpectedAnnualUnitVolume == '--None--')
        {
            isShowmsg=true;
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Please select Expected annual unit volume'));                        
        }
        else if(strProjectStage == '--None--')
        {
            isShowmsg=true;
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Please select the Project Stage'));                        
        }
        else if(!verifyCaptcha())
        {
            isShowmsg=true;
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR,'Invalid CAPTCHA, Please enter again'));
        }
        else
        {
            objCase = new Case(Status = 'New',Priority = strPriority,Product_Category__c = strCategory,Product__c=strproduct,Product_Sub__c=strSubCategory,
                             Sub_Topic__c = strSubTopic, SuppliedName = strFirstName+' '+strLastName,SuppliedEmail = strEmail,Email__c =  strEmail,
                              First_Name__c = strFirstName,Last_Name__c = strLastName,Phone_Number__c = strPhoneNumber,
                              JobTitle__c = strJobTitle,Facebook__c = strFacebook,Company__c = strCompany,
                              Linkedin__c = strLinkedin,Community_Web_Country__c = strCountry,Web_Country__c = strCountry,
                              Twitter__c = strTwitter,State_Province__c = strState,Web_State__c = strState,Web_Form__c = 'TS Community',
                              SuppliedPhone = strPhoneNumber,SuppliedCompany = strCompany,Product_Type_Number__c = strProductTypeNumber,
                              My_Question_is_Related__c = strTopics,Nature_of_Question__c = strNatureOfQuestion,Subject = strSubject,
                              Description = strDescription,Product_application__c = strProductApplication,Expected_annual_unit_volume__c = strExpectedAnnualUnitVolume,
                              Project_Stage__c = strProjectStage,Web_Region__c = strWebRegion,recordtypeId=lstRecordTypes[0].id,origin = 'Community');
            
            Id accountId= objAccount.Id;
            RecordType tsRecordType=[Select Id,name from recordtype where name='TS Community' LIMIT 1];
            
            //checking whether contact is registered and contact under nxp community
            List<account> lstAccounts= [select id,name from account where recordtype.name=:'Child Account' and name!=:'Technical Services']; 
            List<String> strAccountNames= new List<String>();
            for(account objAcnt: lstAccounts)
            {
                strAccountNames.add(objAcnt.name);
            }
            lstContacts =  [Select Id,Email,AccountID FROM Contact 
                            WHERE Email = :strEmail AND (account.name = :NXP_COMMUNITY_ACCOUNT or account.name In: strAccountNames) LIMIT 1]; 
            if(lstContacts.size()>0)
            { 
                objCase.ContactId = lstContacts[0].Id;
                objCase.AccountId = lstContacts[0].AccountId;
                objCase.RecordTypeId= tsRecordType.id;
            }
            
            else
            {
                //checking whether case submitted by contact for the 1st time or not
                lstContacts = [Select id From Contact Where 
                               email =: strEmail And account.name = :TS_COMMUNITY_ACCOUNT LIMIT 1];  
                if(lstContacts.size() > 0)
                {
                    objCase.ContactId = lstContacts[0].id;
                    objCase.AccountId=accountId;  
                    objCase.RecordTypeId= tsRecordType.id;
                }
                else
                {
                    objContact = new Contact(FirstName = strFirstName,LastName = strLastName,AccountId = accountId,Title = 'Community User',
                                             Email = strEmail,Phone = strPhoneNumber);
                    try
                    {
                        insert objContact;
                    }
                    catch (DMLException e) 
                    {
                        ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,'Error in inserting contact'));
                        return null;
                    }                         
                    objCase.AccountId=accountId;
                    objCase.ContactId = objContact.Id;
                    objCase.RecordTypeId= tsRecordType.id;
                } 
            }      
            if(strSubCategory == '--None--' )
            {
               objCase.Product_Sub__c = '';
            }
            else 
            {
                objCase.Product_Sub__c = strSubCategory;
            }
            
            // Specify DML options to ensure the assignment rules are executed
            Database.DMLOptions dmlOpts = new Database.DMLOptions();
            dmlOpts.assignmentRuleHeader.useDefaultRule = true;
            objCase.setOptions(dmlOpts);                       
            
            try
            {
                insert objCase;
            }
            catch (DMLException e) 
            {
                ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,'Error in inserting case'));
                return null;
            }     
            
            objCase = [Select Id, caseNumber From Case Where Id =: objCase.Id Limit 1 ];    
            attachment.ParentId = objCase.Id;
            attachment.IsPrivate = false;
            if(attachment.Name != null)
            {
                try 
                {
                    insert attachment;
                }
                catch (DMLException e) 
                {
                    ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,'Error in uploading attachment'));
                    return null;
                } 
                finally 
                {
                    attachment = new Attachment(); 
                } 
            }
            strCaseNumb = objCase.caseNumber;
            successPage = new PageReference('/community/SuccessPage');
            successPage.getParameters().put('strCaseNumber', strCaseNumb);
            successPage.setRedirect(true);
        }
        return successPage;
    }
    
    public String getCaseNumber() 
    {
        return ApexPages.currentPage().getParameters().get('strCaseNumber');
    }
    
    
    public static HttpResponse makeRequest(string strUrl, string strBody)  
    {
        HttpResponse objResponse = null;
        HttpRequest objRequest = new HttpRequest();  
        objRequest.setEndpoint(strUrl);
        objRequest.setMethod('POST');
        objRequest.setBody (strBody);
        try
        {
            Http http = new Http();
            objResponse = http.send(objRequest);
        }
        catch (System.Exception e) 
        {
            ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,'Error in generating HTTP request'));
        }
            return objResponse;
    }  
}